<?php

//********************************************************************
// Changes to Webforms - in addition to the standard configuration stuff
//********************************************************************
/**
 * Implements hook_form_alter().
 *   Various Functions
 */
//function lalg_wf_utils_form_webform_client_form_alter(&$form, &$form_state, $form_id) {
function lalg_wf_utils_form_alter(&$form, &$form_state, $form_id) {
//dpm($form_id);
//dpm($form);
	// Exit unless Page is UserDetails or AdminDetails
	if(!isset($form['#webform_id'])) { return;}
	if (($form['#webform_id'] !== 'administer_contact_details') && 
	    ($form['#webform_id'] !== 'user_contact_details')) {
		return;
	}

//************  Attach Javascript to Webforms for behaviour tweaks. ************
    $form['#attached']['library'][] = 'lalg_wf_utils/lalg_wf_js';

//************  Add Membership Price Information  *****************
  if ($form['progress']['#current_page'] == 'contact_pagebreak') {	
// dpm($form);
// dpm($form['elements']['contact_pagebreak']['civicrm_2_contact_1_cg8_fieldset']);
	// Find the Price Details
	$prices = lalg_get_price_data();

	// Add to form
	if (isset($form['elements']['contact_pagebreak']['civicrm_2_contact_1_cg8_fieldset']['markup'])) {
	  $form['elements']['contact_pagebreak']['civicrm_2_contact_1_cg8_fieldset']['markup']['#markup'] = $prices;
	}
  }
  
//********************* Copy Postcode if HH not set yet *************************
// Usability, if User has registered with Postcode it then shows on Webform.
  if ($form['progress']['#current_page'] == 'contact_pagebreak' && $form['#webform_id'] == 'user_contact_details')  {	
//  dpm($form);
	// Get current Contact Id
	$cid = CRM_Core_Session::singleton()->getLoggedInContactID();
//	dpm($cid);
	// Get their Postcode
	$result = civicrm_api4('Address', 'get', [
	  'select' => [
		'postal_code',
	  ],
	  'where' => [
		['contact_id', '=', $cid], 
		['location_type_id:name', '=', 'Home'],
	  ],
	]);
//dpm($result);
	
	$postcode = "";
        if(isset($result[0]['postal_code'])) {
	    $postcode = $result[0]['postal_code'];
        }
//	dpm($postcode);
	// Set default value for HH Postcode
	$form['elements']['contact_details']['civicrm_2_contact_1_fieldset_fieldset']['civicrm_2_contact_1_address_postal_code']['#default_value'] = $postcode;
  }
  
//********************  Add Test version of the Payment Processor for WatirUser (etc.) *******************//
//  Allows regression tests on live system without reconfiguration.

	// $uname = strtolower(\Drupal::currentUser()->getUsername());
// //dpm($uname);
	// if ($uname == 'watiruser' || $uname == 'watir' || $uname == 'tony') {
		
// //dpm($form);

		// if ($form['progress']['#current_page'] == 'contribution_pagebreak' && 
		  // $form['#webform_id'] == 'administer_contact_details')  {	
		// // Admin form where there are multiple PP options
			// $ppid =& $form['elements']['contribution_pagebreak']['civicrm_1_contribution_1_contribution_payment_processor_id'];
			// //Add the Stripe Test PP as additional option.
			// if (!isset($ppid['#options'][10])) {
				// $ppid['#options'][10] = 'STRIPE Test';
			// }
			// if (strpos($ppid['#webform_component']['extra']['items'], '9|') === false) {
				// $ppid['#webform_component']['extra']['items'] = $ppid['#webform_component']['extra']['items'] . ' 10|STRIPE Test';
			// }	
		// }

		// // User form where there is only a single PP
		// // Can't work out how to do this, so whole area needs a rethink.
		
// // +d($form);		
	// }
 
}



// ****************** Helper Routine ********************
// Extracts and formats the help text containing Membership types and prices
function lalg_get_price_data() {
	// Get all Active Membership Types
	// Turn off Permissions checks
	$result = civicrm_api4('MembershipType', 'get', [
		'checkPermissions' => FALSE,
	]);
//dpm($result);

	// Build the Help Text
	$prices = 'Membership Prices: </br>'; 
	foreach ($result as $value) { 
		// Exclude OTM, now that it is discontinued
		if ( strpos($value['name'], 'Online') === false ) {
			$prices .= '&nbsp;&nbsp;&nbsp;' . $value['name'] . ' -- Â£';
			$prices .= number_format((float)$value['minimum_fee'], 2);
		}	
	}
  return $prices;
}


//********************************************************************
// Post Processing for Find Mailing Lists View 
//********************************************************************
/**
 * Implements hook_views_post_execute()
 */
// Throws error.  View does not exist?? ##############################
// function lalg_wf_utils_views_post_execute(&$view) {										
// // dpm($view);
	// if ($view->name == 'find_mailing_lists') {
		// foreach ($view->result as $key => $result) {
			// $src = $result->civicrm_group_source;
			// // Show just System Lists - Remove all results with OG Sync source.
			// if (strpos($src, 'OG Sync') !== false) {
				// unset($view->result[$key]);
			// }
		// }
	// }
// }

